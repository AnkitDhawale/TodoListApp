version: "3.9"
services:
  postgres:
    image: postgres
    container_name: todo_postgres_container
    environment:
      POSTGRES_USER: ankit
      POSTGRES_PASSWORD: app123
      POSTGRES_DB: todo_app_db
    ports:
      - "5432:5432"
    # Check if the PostgreSQL server is ready by attempting to connect to the database specified by the
    # POSTGRES_DB environment variable using the user specified by POSTGRES_USER.
    # If the server is ready, the pg_isready command exits with a status of 0, indicating success.
    # Otherwise, it exits with a non-zero status, meaning the service is not yet ready.
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo_network

  todo_backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_todo_backend
    environment:
      DB_HOSTNAME: postgres  # Use service name to connect to Postgres
      DB_USERNAME: ankit
      DB_PASSWORD: app123
      DB_NAME: todo_app_db
      DB_PORT: 5432
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo_network

networks:
  todo_network:
